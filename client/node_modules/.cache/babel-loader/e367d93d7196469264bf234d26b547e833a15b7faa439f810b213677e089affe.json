{"ast":null,"code":"var _jsxFileName = \"D:\\\\transaction-dashboard\\\\client\\\\src\\\\components\\\\PieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PieChart = ({\n  month\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null); // Set initial state to null\n\n  const fetchPieChartData = async () => {\n    try {\n      const response = await axios.get(`/api/transactions/piechart/${month}`);\n      const {\n        categories,\n        itemCounts\n      } = response.data;\n      setChartData({\n        labels: categories || [],\n        datasets: [{\n          label: 'Items Count',\n          data: itemCounts || [],\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n        }]\n      });\n    } catch (error) {\n      console.error('Error fetching pie chart data:', error);\n      setChartData(null); // In case of error, reset chartData\n    }\n  };\n  useEffect(() => {\n    fetchPieChartData();\n  }, [month]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Category Pie Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), chartData ? /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(PieChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = PieChart;\nexport default PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Pie","jsxDEV","_jsxDEV","PieChart","month","_s","chartData","setChartData","fetchPieChartData","response","get","categories","itemCounts","data","labels","datasets","label","backgroundColor","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/transaction-dashboard/client/src/components/PieChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst PieChart = ({ month }) => {\r\n  const [chartData, setChartData] = useState(null); // Set initial state to null\r\n\r\n  const fetchPieChartData = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/transactions/piechart/${month}`);\r\n      const { categories, itemCounts } = response.data;\r\n\r\n      setChartData({\r\n        labels: categories || [],\r\n        datasets: [{\r\n          label: 'Items Count',\r\n          data: itemCounts || [],\r\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n        }]\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching pie chart data:', error);\r\n      setChartData(null); // In case of error, reset chartData\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPieChartData();\r\n  }, [month]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Category Pie Chart</h2>\r\n      {chartData ? <Pie data={chartData} /> : <p>No data available</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElD,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,8BAA8BN,KAAK,EAAE,CAAC;MACvE,MAAM;QAAEO,UAAU;QAAEC;MAAW,CAAC,GAAGH,QAAQ,CAACI,IAAI;MAEhDN,YAAY,CAAC;QACXO,MAAM,EAAEH,UAAU,IAAI,EAAE;QACxBI,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,aAAa;UACpBH,IAAI,EAAED,UAAU,IAAI,EAAE;UACtBK,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS;QACnD,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDX,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdU,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BlB,SAAS,gBAAGJ,OAAA,CAACF,GAAG;MAACa,IAAI,EAAEP;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGtB,OAAA;MAAAkB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACnB,EAAA,CAhCIF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}